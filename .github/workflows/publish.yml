name: OOXMLValidator Publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
env:
  AZURE_FUNCTIONAPP_NAME: OOXMLValidator  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'    # set this to the path to your web app project, defaults to the repository root

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_env: ["linux-x64", "linux-arm64", "osx-x64", "osx-arm64", "win-x64"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup DotNet 8.x Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Install dependencies
        run: dotnet restore

      - name: Build/${{ matrix.build_env }}
        run: ./dev.sh build ${{ matrix.build_env }}

      - name: Artifacts/${{ matrix.build_env }}
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.build_env }}
          path: |
            ./OOXMLValidatorCLI/bin/Release/net8.0/${{ matrix.build_env }}/publish/OOXMLValidatorCLI
            ./OOXMLValidatorCLI/bin/Release/net8.0/${{ matrix.build_env }}/publish/OOXMLValidatorCLI.exe
        
  publish-test-osx-x64:
    needs: publish
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-osx-x64
          path: ./test-ci
      - run: CI_SHELL_OVERRIDE=test-ci ./dev.sh test osx-x64

  publish-test-linux:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-linux-x64
          path: ./test-ci
      - run: CI_SHELL_OVERRIDE=test-ci ./dev.sh test linux-x64

  publish-test-windows:
    needs: publish
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-win-x64
          path: ./test-ci
      - shell: bash
        run: CI_SHELL_OVERRIDE=test-ci ./dev.sh test win-x64

  release:
    name: release
    needs: [publish, publish-test-osx-x64, publish-test-linux, publish-test-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-linux-x64
          path: build-linux-x64
      - uses: actions/download-artifact@v4
        with:
          name: build-linux-arm64
          path: build-linux-arm64
      - uses: actions/download-artifact@v4
        with:
          name: build-osx-x64
          path: build-osx-x64
      - uses: actions/download-artifact@v4
        with:
          name: build-osx-arm64
          path: build-osx-arm64
      - uses: actions/download-artifact@v4
        with:
          name: build-win-x64
          path: build-win-x64
      - run: |
          cd build-linux-x64 && zip -r ../linux-x64.zip * && cd -
          cd build-linux-arm64 && zip -r ../linux-arm64.zip * && cd -
          cd build-osx-x64 && zip -r ../osx-x64.zip * && cd -
          cd build-osx-arm64 && zip -r ../osx-arm64.zip * && cd -
          cd build-win-x64 && zip -r ../win-x64.zip * && cd -
      - name: release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            linux-x64.zip
            linux-arm64.zip
            osx-x64.zip
            osx-arm64.zip
            win-x64.zip